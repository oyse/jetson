/*
* generated by Xtext
*/
package org.dadacoalition.ui.outline;

import java.util.List;

import org.dadacoalition.json.JSONString;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.outline.ContentOutlineNode;
import org.eclipse.xtext.ui.editor.outline.transformer.AbstractDeclarativeSemanticModelTransformer;

/**
 * customization of the default outline structure
 * 
 */
public class JsonTransformer extends AbstractDeclarativeSemanticModelTransformer {
	
	  /**
	   * This method will be called by naming convention:
	   * - method name must be createNode
	   * - first param: subclass of EObject
	   * - second param: ContentOutlineNode 
	   */
	  public ContentOutlineNode createNode(
	      JSONString semanticNode, ContentOutlineNode parentNode) {
	    ContentOutlineNode node = super.newOutlineNode(semanticNode, parentNode);
	    node.setLabel("special " + node.getLabel());
	    return node;
	  }
	  
	  
//	  public ContentOutlineNode createNode(
//	      Property semanticNode, ContentOutlineNode parentNode) {
//	    ContentOutlineNode node = super.newOutlineNode(semanticNode, parentNode);
//	    node.setLabel("pimped " + node.getLabel());
//	    return node;
//	  }

	  /**
	   * This method will be called by naming convention:
	   * - method name must be getChildren
	   * - first param: subclass of EObject
	   */
//	  public List<EObject> getChildren(JSONString attribute) {
//	    return attribute.eContents();
//	  }

	  public List<EObject> getChildren(JSONString property) {
	    return NO_CHILDREN;
	  }
	
	
}
